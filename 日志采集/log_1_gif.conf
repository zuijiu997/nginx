location /lua/1.gif{
    proxy_method GET;
    proxy_pass http://127.0.0.1/result;

    if ($time_iso8601 ~ "^(?<year>\d{4})-(?<month>\d{2})-(?<day>\d{2})") {}
    access_log /var/logs1/access_lua_gif_${year}${month}${day}.log main_gif;

    open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;



    set $cookie_source "";
    if ($http_cookie ~* "source=(.+)(?:;|$)" ) {
        set $cookie_source $1;
    }

    set $body_data '';

    content_by_lua_block {


        -- 用户跟踪cookie名为__utrace
        local uid = ngx.var.cookie___utrace
        if not uid then
            -- 如果没有则生成一个跟踪cookie，算法为md5(时间戳+IP+客户端信息)
            uid = ngx.md5(ngx.now() .. ngx.var.remote_addr .. ngx.var.http_user_agent)
            ngx.header['Set-Cookie'] = {'__utrace=' .. uid .. '; path=/'}
        end
        ngx.var.cookie_source = '__utrace=' .. uid
        ngx.req.read_body()
        local data = ngx.req.get_body_data()
        ngx.var.body_data = data
        -- 必须要有
        ngx.say("body: ", data)
        -- 引入lua所有api
        local cjson = require "cjson"
        local producer = require "resty.kafka.producer"
        -- 定义kafka broker地址，ip需要和kafka的host.name配置一致
        local broker_list = {
                { host = "47.107.172.115", port = 9092 },
        }
        -- 定义json便于日志数据整理收集
        local log_json = {}
        log_json["uri"]=ngx.var.uri
        log_json["args"]=ngx.var.args
        for key, value in pairs(ngx.req.get_uri_args()) do
            log_json[key] = value
        end
        log_json["host"]=ngx.var.host
        log_json["request_body"]=ngx.var.request_body
        ngx.req.read_body()
        for key, value in pairs(ngx.req.get_post_args()) do
            log_json[key] = value
        end
        log_json["remote_addr"] = ngx.var.remote_addr
        log_json["msec"] = ngx.var.msec
        log_json["cookie_source"] = ngx.var.cookie_source
        log_json["remote_user"] = ngx.var.remote_user
        log_json["time_local"] = ngx.var.time_local
        log_json["status"] = ngx.var.status
        log_json["body_bytes_sent"] = ngx.var.body_bytes_sent
        log_json["http_referer"] = ngx.var.http_referer
        log_json["http_user_agent"] = ngx.var.http_user_agent
        log_json["http_x_forwarded_for"] = ngx.var.http_x_forwarded_for
        log_json["upstream_response_time"] = ngx.var.upstream_response_time
        log_json["request_time"] = ngx.var.request_time
        -- 转换json为字符串
        local message = cjson.encode(log_json);
        -- 定义kafka异步生产者
        local bp = producer:new(broker_list, { producer_type = "async" })
        -- 发送日志消息,send第二个参数key,用于kafka路由控制:
        -- key为nill(空)时，一段时间向同一partition写入数据
        -- 指定key，按照key的hash写入到对应的partition
        local ok, err = bp:send("test1", nil, message)

        if not ok then
            ngx.log(ngx.ERR, "kafka send err:", err)
                return
        end
    }
}
